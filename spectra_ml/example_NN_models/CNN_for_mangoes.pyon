# Example architecture, just for testing the code.
# See https://doi.org/10.1016/j.chemolab.2022.104685 for a better architecture for this dataset.
#
#> python train_model.py NN --cmd_args_fpath "./example_NN_models/CNN_for_mangoes.pyon"

{
  'out_dir_naming': 'AUTO',
  # 'resultsDir': "",
  'm': 'Mangoes_CNN',
  'n_in_parallel': 0, # numbers of training runs to run in parallel (3 works well on a mediocre GPU; set to 0 to disable parallelization entirely)
  'fold_spec': {'type': '10fold_and_test_split', 'use_dev': True},
  'scaler_settings': {
    'X_type': 'mean_std',
    'Y_type': 'mean_std',
  },
  'dataset_name': 'mangoes',
  'do_ES': True,
  'n_training_runs': 40,
  'which_folds': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
  'which_targets_set': 'DM',
  'base_LR': 1e-06,
  'conv_filter_width': 11,
  'batch_size': 128,
  'n_full_epochs': 10000,
  'LR_sched_settings': {'type': 'ReduceLROnPlateau', 'patience': 25, 'factor': 0.5, 'base_min_LR': 1e-08},
  'ES_patience': 50,
  'input_features': ['NIR_truncated'],
  'FC_L2_reg_factor': 0.01,
  'FC_init': 'he_normal',
  'conv_L2_reg_factor': 0.01,
  'conv_filter_init': 'he_normal',
  'conv_n_filters': 10,
  'FC_size_per_input': [8],
  'FC_L2_reg_factor_per_input': [0.01],
}